
<script src="/js/classes/client_room_handler.js"></script>

<script>

    const genRandomNumbers = function getRandomNumbers() {
        const array = new Uint32Array(1);
        crypto.getRandomValues(array);
        return array[0]
    }


    let options = {};
    options.user = {};
    <% if(user){ %>
        options.user.id = "<%= user._id %>"
        options.user.name = "<%= user.username %>"
    <% }else{ %>
        let id = genRandomNumbers()
        options.user.id = id
        options.user.name = "Guest_"+id        
    <% } %>

    const clientRoomHandler = new client_room_handler(options);

</script>




<div class="offcanvas offcanvas-end" tabindex="-1" id="offcanvasRight" aria-labelledby="offcanvasRightLabel">
    <div class="offcanvas-header">
        <h5 class="offcanvas-title" id="offcanvasRightLabel">Join or Create Room</h5>    

        <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>

    <div class="container">
        <div class="form-floating mb-3">
            <input type="email" class="form-control" id="floatingRoom" placeholder="Room Name">
            <label for="floatingInput">Room Name</label>
        </div>

        <div class="form-floating mb-3">
            <input type="email" class="form-control" id="floatingPassword" placeholder="Password">
            <label for="floatingInput">Password</label>
        </div>
        
        <div class="form-floating mb-3">
            <input type="number" class="form-control" id="floatingMaxUsers" placeholder="Max Users", min="1">
            <label for="floatingMaxUsers">Max Users</label>
        </div>

        <div class="form-check mb-3">
            <input class="form-check-input" type="checkbox" value="" id="useWaitingRoom">
            <label class="form-check-label" for="useWaitingRoom">
                Use Waiting Room
            </label>
        </div>   

        <select class="form-select" onchange="getRoom(this)" id="connectionOptions">
            <option value="" selected>Submit</option>
            <option value="create">Create Room</option>
            <option value="join">Join Room</option>
        </select>

        <input class="form-control" type="hidden" id="userID" 
        value=
        <% if(user){ %>
            "<%= user._id %>" 
        <% }else{ %>
            ""
        <% } %>
        disabled>

        <div class="alert alert-danger hide-display" role="alert" id="connectionMessage">
            TEST	
        </div>		
        <!-- <script type="text/javascript">window.setTimeout("document.getElementById('connectionMessage').style.display='none';", 0); </script> -->

    </div>    
</div>

<button class="btn btn-primary socket__join_button" id="socket__join_button" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasRight" aria-controls="offcanvasRight">Join / Create Room</button>
<div id="login__blackout" class="container">

<%- include("./socket_room") %>

</div>


<script>
    getRoom = (e) => {

        let action = e.value;
        if(action !== ""){

            let room_name = document.getElementById('floatingRoom').value;
            let password = document.getElementById('floatingPassword').value;
            let user = clientRoomHandler.user.id;
            let max_users = document.getElementById('floatingMaxUsers').value;
            let use_waiting_room = document.getElementById('useWaitingRoom').checked;

            let options = {
                functionGroup: "core",  
                function: "checkRoom",
                message: action+" room",
                data: {
                    action: action
                    ,room_name: room_name
                    ,password: password
                    ,users: [user]
                    ,admins: [user]
                    ,use_waiting_room: use_waiting_room
                }     
            }       

            if(max_users !== ""){
                options.data.max_users = Number(max_users)
            }
            // if(use_waiting_room !== "false"){
            //     options.data.use_waiting_room = true
            // }            

            clientSocketHandler.messageServer(options)            
        }
    }

</script>



<script src="/socket.io/socket.io.js"></script>
<script src="/js/classes/client_socket_handler.js"></script>

<script>

    //SHOW THE OFFCANVAS LOGIN TAB
    const show_login = () => {
        let myOffcanvas = document.getElementById('offcanvasRight')
        var bsOffcanvas = new bootstrap.Offcanvas(myOffcanvas)
        bsOffcanvas.show();
    }
    show_login();

    socket_address = "<%= data.address %>";

    const clientSocketHandler = new client_socket_handler({
        socket_address: socket_address
    });

</script>

