



states
----------------------------

-add in function to advance side so the turn can be passed on

-implement a full set of moving states for actions, by which I mean, a switch that'll advance 
the current mode once all players have readied up



actions
----------------------------

FIGHTING
-BUG -Right click on fighting is deletion all melee actions lined up, instead of just the last one
    -Also check shooting for this bug

-include a fighting bonus for units fighting the same target unit. +1 per additional fighter
    

bugs
----------------------------
-BUG -Couldn't remove a special ability from the squad list, only replace it
-BUG -There may be a bug that appropriates damage to the wrong unit



would likes
----------------------------
-BARRAGE - have a random location close to selected area as the eventual target

-modernize the login and register input fields

-put special rules on weapons as well as units

-remove NULL moving and shooting elements so they don't tax the socket emit








//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
######  ####### #     # ####### 
#     # #     # ##    # #       
#     # #     # # #   # #       
#     # #     # #  #  # #####   
#     # #     # #   # # #       
#     # #     # #    ## #       
######  ####### #     # ####### 
//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

EFFECTS
    -DONE - Need to check for POISON status, apply damage and tick down health of effect        
    -DONE -regen - 20% chance of the unit regenerating any lost wounds suffered

-DONE -Make COHERANCY work with lone units; it's green all the time. This'll allow for the new selection process to work with them.

-DONE -Highlight a unit when it's selected to shoot and fight

SPECIAL RULES
    -DONE -barrage - you may fire a shot with a weapon indirectly
    -DONE -sword dance - unit can leave combat without suffering opportunity attacks from enemies
    -DONE -swift - unit can charge even if they've shot their weapon
    -DONE -berserker - unit can double the number of targets from their melee weapon the turn they move into combat
    -poison
        -DONE -Need to apply poison to units hit by it during shooting
        -DONE -status effect isn't being applied to a unit within the area of a status effect when shooting. 
        Needs to run utils.checkStatusEffects
        -DONE -need to draw particle listing effects that're passed to bullets via targets and blast_targets vars

MOVEMENT
    -DONE -check to see if a unit is leaving combat and check and apply damage once it's finished moving

FIGHTING
    -DONE -Need to pass the "in combat with" fight info to draw symbols on client when movement ends
    -DONE -fight needs to say when a unit can or can't be a target
    -DONE -apply unit "in combat" check
    -DONE -apply opportunity attack if combat is left

-DONE -Right click in movement isn't resetting cohesion

-FIXED -when units data is trying to be saved, it looks like because it's a nested array, they don't save. 
Figured out a method to loop through units and save their data but need to#
THIS WASN'T A BUG AFTER ALL. The value weren't seen in the database as they were being reset at the end of the playing action
    -NOTE -Doesn't happen when setting actions (but before they're appled). The reason for this is that i'm 
    using the updateone method
    -check through action process saves and test they working
    -update those methods if the data doesn't save
    -figure out an easy way to easily update only units that need updating

-DONE -Both players (not on the same side I think), have to ready up before a turn will play

RESET
    -DONE -Clear live tiles on reset actions
    -DONE -Make reset all a function in gameCore so it can be run by other functions

-DONE -add in multiple players on the same game screen which can be used for testing or single screen gaming
-DONE -Fix shooting bug that causes bullet to hit our side

FIGHTING
    -DONE -Need to get the drawing of damage properly working

SHOOTING
    -DONE -targets set e.g. 1/2 graphic, only generates after the targets are cleared

MOVEMENT
    -DONE -Make a selected unit's path stand out once it's been updated
    -DONE -Highlight movement path when a unit is selected
    -DONE -Make the selected unit stand out in terms of cohesion brightness


-DONE -BUG -Collision check works only sometimes
    -This issue was down to the path adjustment in game_collisions, it was actually making multiple adjustments to the last place 
    in a path causing it to move off to the top left hand side of any room with each check made.

MOVEMENT
-DONE -Finalise movemement once it's completed
-DONE -make the path line dissappear one the object is reached

FIGHTING
-DONE -Finalise fighting once it's completed

SHOOTING
-DONE -Finalise shooting once it's completed

RESET
-DONE -Add reset for moved, shot and fought

SPECIAL RULES
-DONE -whirling dervish - unit adds 4 to their melee armour piercing value the turn they move into combat
-DONE -sniper - unit adds 4 to their armour piercing value if they don't move before taking the shot
-DONE -firing drills - unit that doesn't move can double the number of shots from their ranged weapon



STATUS effects
-DONE -Pass effects back to movement path if a unit passed through them
-DONE -do the same for target and splash targets of bullets

SHOOTING
-DONE -Check barriers to see if they affect bullets
-DONE -apply effects for sniping units / effects when figuring out wounding
-DONE -apply damage reduction when shield barrier is crossed


-DONE -Cohesion checks
-DONE -Update positions of units
-DONE -if a unit has a saved path on the server, use the end path for the selection position instead
-DONE -if a path is reset for a unit, waterfall any unit path resets that it affects.


-DONE -Limit the range to the maximum range of a gun
-DONE -Keep a list of potential unit shooting targets that can be referred back to later

-DONE -save the potential targets to the gamedata table
-DONE -generate blast markers
-DONE -generate barrier
-DONE -generate wounding
-DONE -Figure out in the timeline exactly where a bullet will die

-Full Check
    -DONE -Generate target paths for all units
    -DONE -When all units are readied up
        -DONE -tick through bullets, deciding what order they'll hit in, and what wounding occurs
        -DONE -figure out if a unit is dead in this step phase so when the next bullet is figured out, it'll then carry past any "dead units"

-Smart Check
    -Maybe instead of stopping a bullet entirely when it's path is checked, all unit stops are logged
    -Then pass a set number of wounding scores that can then be applied to any unit it hits
    -There would need to be a way for the server to figure out who's actually hit though


-DONE -liveMessage alert is spawning for a second or two, causing a stutter
-DONE -Grey out the offscene menu when a room is succesfully join or created then close it after the message bar is removed

-DONE -use the game template setup and connect to the socket using a guest login
-DONE -Move the pathfinder script to the server and load the MAP JSON file
-DONE -Strip down the unit class to completely seperate out any functions that can be carried out on the server with those those must be on the client side
    -DONE -Sprite generation and movement, CLIENT
    -DONE -setting actions, SERVER
    -DONE -path checking to show available spaces, SERVER
-DONE -Tie the marker to an actual user ID instead of just the first one



-DONE -Create a means of generating a path on the server then passing back a series of positions and angles for the sprite to follow
-DONE -Control the game state on the Server now its been seperated from the GameUI class

-DONE -Position a unit then generate possible positions for them to move in the server
    -run a loop x number of times a second then cancel it when it's no longer needed
    -return all possible movement position
-DONE -When a possible position is clicked on
    -recognise the click
    -generate path to that position then send it to the client
    -draw the client path
    -set a timer on the server that calculates which marker the unit should be on over x seconds then send that position to the client to align the client
    -make the unit interpolate along the given path